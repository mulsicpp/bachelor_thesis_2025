# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  bachelor_project_linux_config = debug
  vk_tutorial_linux_config = debug

else ifeq ($(config),release)
  bachelor_project_linux_config = release
  vk_tutorial_linux_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := bachelor_project_linux vk_tutorial_linux

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

bachelor_project_linux:
ifneq (,$(bachelor_project_linux_config))
	@echo "==== Building bachelor_project_linux ($(bachelor_project_linux_config)) ===="
	@${MAKE} --no-print-directory -C bachelor_project -f Makefile config=$(bachelor_project_linux_config)
endif

vk_tutorial_linux:
ifneq (,$(vk_tutorial_linux_config))
	@echo "==== Building vk_tutorial_linux ($(vk_tutorial_linux_config)) ===="
	@${MAKE} --no-print-directory -C vk_tutorial -f Makefile config=$(vk_tutorial_linux_config)
endif

clean:
	@${MAKE} --no-print-directory -C bachelor_project -f Makefile clean
	@${MAKE} --no-print-directory -C vk_tutorial -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   bachelor_project_linux"
	@echo "   vk_tutorial_linux"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"