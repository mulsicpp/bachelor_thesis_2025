# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES +=
INCLUDES += -I../external/vulkan/include -I../external/glm/include -I../external/glfw/include -I../external/stb_image/include -Isrc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lglfw3 -lvulkan
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/linux-Debug
TARGET = $(TARGETDIR)/bachelor_project_linux
OBJDIR = obj/linux-Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++20
ALL_LDFLAGS += $(LDFLAGS) -L../external/glfw/lib/linux -L../external/vulkan/lib -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = bin/linux-Release
TARGET = $(TARGETDIR)/bachelor_project_linux
OBJDIR = obj/linux-Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
ALL_LDFLAGS += $(LDFLAGS) -L../external/glfw/lib/linux -L../external/vulkan/lib -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Animation.o
GENERATED += $(OBJDIR)/App.o
GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/CommandBuffer.o
GENERATED += $(OBJDIR)/CommandManager.o
GENERATED += $(OBJDIR)/Context.o
GENERATED += $(OBJDIR)/DescriptorPool.o
GENERATED += $(OBJDIR)/Fence.o
GENERATED += $(OBJDIR)/FrameManager.o
GENERATED += $(OBJDIR)/Framebuffer.o
GENERATED += $(OBJDIR)/Handle.o
GENERATED += $(OBJDIR)/HeadlessApp.o
GENERATED += $(OBJDIR)/Image.o
GENERATED += $(OBJDIR)/ImageView.o
GENERATED += $(OBJDIR)/LibManager.o
GENERATED += $(OBJDIR)/Mesh.o
GENERATED += $(OBJDIR)/Node.o
GENERATED += $(OBJDIR)/Pipeline.o
GENERATED += $(OBJDIR)/PipelineLayout.o
GENERATED += $(OBJDIR)/Rasterizer.o
GENERATED += $(OBJDIR)/RenderPass.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/Semaphore.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/SubBuffer.o
GENERATED += $(OBJDIR)/Swapchain.o
GENERATED += $(OBJDIR)/VertexInput.o
GENERATED += $(OBJDIR)/VkBootstrap.o
GENERATED += $(OBJDIR)/cgltf.o
GENERATED += $(OBJDIR)/format.o
GENERATED += $(OBJDIR)/load_file.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/vk_mem_alloc.o
GENERATED += $(OBJDIR)/volk.o
OBJECTS += $(OBJDIR)/Animation.o
OBJECTS += $(OBJDIR)/App.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/CommandBuffer.o
OBJECTS += $(OBJDIR)/CommandManager.o
OBJECTS += $(OBJDIR)/Context.o
OBJECTS += $(OBJDIR)/DescriptorPool.o
OBJECTS += $(OBJDIR)/Fence.o
OBJECTS += $(OBJDIR)/FrameManager.o
OBJECTS += $(OBJDIR)/Framebuffer.o
OBJECTS += $(OBJDIR)/Handle.o
OBJECTS += $(OBJDIR)/HeadlessApp.o
OBJECTS += $(OBJDIR)/Image.o
OBJECTS += $(OBJDIR)/ImageView.o
OBJECTS += $(OBJDIR)/LibManager.o
OBJECTS += $(OBJDIR)/Mesh.o
OBJECTS += $(OBJDIR)/Node.o
OBJECTS += $(OBJDIR)/Pipeline.o
OBJECTS += $(OBJDIR)/PipelineLayout.o
OBJECTS += $(OBJDIR)/Rasterizer.o
OBJECTS += $(OBJDIR)/RenderPass.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/Semaphore.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/SubBuffer.o
OBJECTS += $(OBJDIR)/Swapchain.o
OBJECTS += $(OBJDIR)/VertexInput.o
OBJECTS += $(OBJDIR)/VkBootstrap.o
OBJECTS += $(OBJDIR)/cgltf.o
OBJECTS += $(OBJDIR)/format.o
OBJECTS += $(OBJDIR)/load_file.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/vk_mem_alloc.o
OBJECTS += $(OBJDIR)/volk.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking bachelor_project_linux
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning bachelor_project_linux
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/App.o: src/App.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/HeadlessApp.o: src/HeadlessApp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VkBootstrap.o: src/external/VkBootstrap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cgltf.o: src/external/cgltf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_mem_alloc.o: src/external/vk_mem_alloc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/volk.o: src/external/volk.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameManager.o: src/rendering/FrameManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Rasterizer.o: src/rendering/Rasterizer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Animation.o: src/scene/Animation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Mesh.o: src/scene/Mesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Node.o: src/scene/Node.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/scene/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LibManager.o: src/utils/LibManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/load_file.o: src/utils/load_file.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CommandBuffer.o: src/vk_core/CommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CommandManager.o: src/vk_core/CommandManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Context.o: src/vk_core/Context.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Handle.o: src/vk_core/Handle.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Swapchain.o: src/vk_core/Swapchain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format.o: src/vk_core/format.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DescriptorPool.o: src/vk_pipeline/DescriptorPool.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Framebuffer.o: src/vk_pipeline/Framebuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pipeline.o: src/vk_pipeline/Pipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PipelineLayout.o: src/vk_pipeline/PipelineLayout.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderPass.o: src/vk_pipeline/RenderPass.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/vk_pipeline/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexInput.o: src/vk_pipeline/VertexInput.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/vk_resources/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Image.o: src/vk_resources/Image.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImageView.o: src/vk_resources/ImageView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SubBuffer.o: src/vk_resources/SubBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Fence.o: src/vk_sync/Fence.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Semaphore.o: src/vk_sync/Semaphore.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif